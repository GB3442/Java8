
==================== BiPredicate ,BiFunction,BiSupplier, BiConsumer ==================

                   ===== BiPredicate =====

=> Just like predicate, BiPredicate takes two arguments and perform conditional checking.
   =>If our business requirement is to check two arguments then we have to go for BiPredicate.

     @functionalInterface
     interface BiPredicate<T,U>{
         public boolean test(T t,U u);
     }

                   ===== BiFunction =====

=> Here also BiFunction takes two argument as input and return something as return type
   =>Sometimes our programming requirement is we have to take two input and perform some operation and return
   them as return type we have to go for BiFunction.

    @functionalInterface
    interface BiFunction<T,U,R>{
        public R apply(T t,U u);
    }

                     ===== BiConsumer =====

=> It is used to consume Objects as input type and display on console or to save into database.

    @functionalInterface
    interface BiConsumer<T,U>{
         public void accept(T t, U u);
    }


